module.exports = {
  operation: {
    perform: {
      url: '{{process.env.BASE_URL}}/{{bundle.authData.environment}}/payments/realtime',
      method: 'POST',
      params: {},
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/json',
        Authorization: 'Bearer {{bundle.authData.access_token}}',
      },
      body: {
        payerId: '{{bundle.inputData.payerId}}',
        firstName: '{{bundle.inputData.firstName}}',
        lastName: '{{bundle.inputData.lastName}}',
        email: '{{bundle.inputData.email}}',
        mobileNumber: '{{bundle.inputData.mobileNumber}}',
        sourceId: '{{bundle.inputData.sourceId}}',
        creditCardToken: '{{bundle.inputData.creditCardToken}}',
        amount: '{{bundle.inputData.amount}}',
        description: '{{bundle.inputData.description}}',
        applicationFee: '{{bundle.inputData.applicationFee}}',
      },
      removeMissingValuesFrom: {},
    },
    inputFields: [
      {
        key: 'payerId',
        label: 'Payer Id',
        type: 'string',
        helpText:
          'Specify a payerId in `pyr_XXXXXXXXXXXXXX` format if linked to an existing payer. If left empty, a new payer will be created.',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'firstName',
        label: 'First Name',
        type: 'string',
        helpText: 'Only required if Payer Id is empty.',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'lastName',
        label: 'Last Name',
        type: 'string',
        helpText: 'Only required if Payer Id is empty',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'email',
        label: 'Email Address',
        type: 'string',
        helpText:
          'Not required if Payer Id is set. If not set - payer must have an Email Address, Mobile Number or both fields set.',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'mobileNumber',
        label: 'Mobile Number',
        type: 'string',
        helpText:
          'Not required if Payer Id is set. If not set - payer must have an Email Address, Mobile Number or both fields set.',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'sourceId',
        label: 'Source Id',
        type: 'string',
        helpText:
          'Optional. If you want to use an existing source on a Payer, the source can be found using the Find Payer action (in `src_XXXXXXXXXXXXXX` format) and set here. Otherwise, leave empty to set up a new payment source. Leave empty if Credit Card Token is set.',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'creditCardToken',
        label: 'Credit Card Token',
        type: 'string',
        helpText:
          'Please see [Pinch Documentation](https://docs.getpinch.com.au/docs/credit-card-payments) for instructions on how to tokenize a credit card. Leave empty if Source Id is set.',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'amount',
        label: 'Amount',
        type: 'number',
        helpText: 'Amount (in cents) to be debited from the payment source.',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'description',
        label: 'Description',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'applicationFee',
        label: 'Application Fee',
        type: 'integer',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
    ],
    sample: {
      id: 'pmt_XXXXXXXXXXXXXX',
      attemptId: 'att_XXXXXXXX',
      amount: 1000,
      currency: 'AUD',
      description: '',
      applicationFee: 0,
      totalFee: 55,
      isSurcharged: false,
      sourceType: 'credit-card',
      transactionDate: '2021-04-26T07:15:52.8507613Z',
      status: 'approved',
      estimatedTransferDate: '2021-04-29',
      actualTransferDate: null,
      payer: {
        id: 'pyr_XXXXXXXXXXXXXX',
        firstName: '',
        lastName: '',
        emailAddress: '',
        mobileNumber: '',
        streetAddress: null,
        suburb: null,
        postcode: null,
        state: null,
        country: null,
        companyName: null,
        companyRegistrationNumber: null,
        metadata: null,
      },
      subscription: null,
      attempts: [
        {
          id: 'att_XXXXXXXX',
          amount: 1000,
          currency: 'AUD',
          convertedAmount: null,
          conversionRate: null,
          convertedCurrency: null,
          estimatedSettlementDate: '2021-04-29T00:00:00',
          isSurcharged: false,
          transactionDate: '2021-04-26T07:15:52.8507613Z',
          estimatedTransferDate: '2021-04-29',
          actualTransferDate: null,
          source: {
            id: 'src_XXXXXXXXXXXXXX',
            sourceType: 'credit-card',
            bankAccountNumber: null,
            bankAccountBsb: null,
            bankAccountName: null,
            creditCardToken: 'tkn_XXXXX',
            cardHolderName: '',
            expiryDate: '2022-12-01T00:00:00',
            displayCardNumber: '4242',
            cardScheme: 'visa',
            origin: 'AU',
            funding: 'credit',
          },
          dishonour: null,
          settlement: null,
          fees: {
            transactionFee: 55,
            applicationFee: 0,
            totalFee: 55,
            currency: 'AUD',
            taxRate: 0.1,
            convertedTransactionFee: null,
            convertedApplicationFee: null,
            convertedTotalFee: null,
            convertedCurrency: null,
            conversionRate: null,
          },
          status: 'approved',
        },
      ],
      metadata: null,
    },
    outputFields: [
      { key: 'id' },
      { key: 'attemptId' },
      { key: 'amount' },
      { key: 'currency' },
      { key: 'description' },
      { key: 'applicationFee' },
      { key: 'totalFee' },
      { key: 'isSurcharged' },
      { key: 'sourceType' },
      { key: 'transactionDate' },
      { key: 'status' },
      { key: 'estimatedTransferDate' },
      { key: 'actualTransferDate' },
      { key: 'payer__id' },
      { key: 'payer__firstName' },
      { key: 'payer__lastName' },
      { key: 'payer__emailAddress' },
      { key: 'payer__mobileNumber' },
      { key: 'payer__streetAddress' },
      { key: 'payer__suburb' },
      { key: 'payer__postcode' },
      { key: 'payer__state' },
      { key: 'payer__country' },
      { key: 'payer__companyName' },
      { key: 'payer__companyRegistrationNumber' },
      { key: 'payer__metadata' },
      { key: 'subscription' },
      { key: 'attempts[]id' },
      { key: 'attempts[]amount' },
      { key: 'attempts[]currency' },
      { key: 'attempts[]convertedAmount' },
      { key: 'attempts[]conversionRate' },
      { key: 'attempts[]convertedCurrency' },
      { key: 'attempts[]estimatedSettlementDate' },
      { key: 'attempts[]isSurcharged' },
      { key: 'attempts[]transactionDate' },
      { key: 'attempts[]estimatedTransferDate' },
      { key: 'attempts[]actualTransferDate' },
      { key: 'attempts[]source__id' },
      { key: 'attempts[]source__sourceType' },
      { key: 'attempts[]source__bankAccountNumber' },
      { key: 'attempts[]source__bankAccountBsb' },
      { key: 'attempts[]source__bankAccountName' },
      { key: 'attempts[]source__creditCardToken' },
      { key: 'attempts[]source__cardHolderName' },
      { key: 'attempts[]source__expiryDate' },
      { key: 'attempts[]source__displayCardNumber' },
      { key: 'attempts[]source__cardScheme' },
      { key: 'attempts[]source__origin' },
      { key: 'attempts[]source__funding' },
      { key: 'attempts[]dishonour' },
      { key: 'attempts[]settlement' },
      { key: 'attempts[]fees__transactionFee' },
      { key: 'attempts[]fees__applicationFee' },
      { key: 'attempts[]fees__totalFee' },
      { key: 'attempts[]fees__currency' },
      { key: 'attempts[]fees__taxRate' },
      { key: 'attempts[]fees__convertedTransactionFee' },
      { key: 'attempts[]fees__convertedApplicationFee' },
      { key: 'attempts[]fees__convertedTotalFee' },
      { key: 'attempts[]fees__convertedCurrency' },
      { key: 'attempts[]fees__conversionRate' },
      { key: 'attempts[]status' },
      { key: 'metadata' },
    ],
  },
  key: 'payment_create_realtime',
  noun: 'Payment',
  display: {
    label: 'Create Realtime Payment',
    description:
      'Create a real-time payment against a credit card or bank account',
    hidden: false,
    important: true,
  },
};
